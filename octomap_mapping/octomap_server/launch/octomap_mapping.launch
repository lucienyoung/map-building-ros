<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.1" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="world" />
        <!-- <param name="base_frame_id" type="string" value="global_camera"/> -->
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="-1.0" />
		<param name="latch" value="false" />

        <!-- max/min height for occupancy map in meter -->
		<param name="pointcloud_max_z"  value="0.2" />
		<param name="pointcloud_min_z"  value="-0.8" />
		<!--<param name="filter_ground"  value="true" />-->
		<!--<param name="ground_filter/distance"  value="0.05" />-->

        <param name="height_map" value="true"/>
		
		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/pose_graph/octree" />
        <!--<remap from="/projected_map" to="/map" />-->
	
	</node>
</launch>
